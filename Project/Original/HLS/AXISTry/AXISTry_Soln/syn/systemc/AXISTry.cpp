// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "AXISTry.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic AXISTry::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic AXISTry::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<30> AXISTry::ap_ST_fsm_state1 = "1";
const sc_lv<30> AXISTry::ap_ST_fsm_state2 = "10";
const sc_lv<30> AXISTry::ap_ST_fsm_state3 = "100";
const sc_lv<30> AXISTry::ap_ST_fsm_state4 = "1000";
const sc_lv<30> AXISTry::ap_ST_fsm_state5 = "10000";
const sc_lv<30> AXISTry::ap_ST_fsm_state6 = "100000";
const sc_lv<30> AXISTry::ap_ST_fsm_state7 = "1000000";
const sc_lv<30> AXISTry::ap_ST_fsm_state8 = "10000000";
const sc_lv<30> AXISTry::ap_ST_fsm_state9 = "100000000";
const sc_lv<30> AXISTry::ap_ST_fsm_state10 = "1000000000";
const sc_lv<30> AXISTry::ap_ST_fsm_state11 = "10000000000";
const sc_lv<30> AXISTry::ap_ST_fsm_state12 = "100000000000";
const sc_lv<30> AXISTry::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<30> AXISTry::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<30> AXISTry::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<30> AXISTry::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<30> AXISTry::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<30> AXISTry::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<30> AXISTry::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<30> AXISTry::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<30> AXISTry::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<30> AXISTry::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<30> AXISTry::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<30> AXISTry::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<30> AXISTry::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<30> AXISTry::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<30> AXISTry::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<30> AXISTry::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<30> AXISTry::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<30> AXISTry::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<1> AXISTry::ap_const_lv1_0 = "0";
const sc_lv<1> AXISTry::ap_const_lv1_1 = "1";
const sc_lv<2> AXISTry::ap_const_lv2_0 = "00";
const sc_lv<2> AXISTry::ap_const_lv2_2 = "10";
const sc_lv<2> AXISTry::ap_const_lv2_3 = "11";
const sc_lv<2> AXISTry::ap_const_lv2_1 = "1";
const sc_lv<32> AXISTry::ap_const_lv32_3 = "11";
const sc_lv<32> AXISTry::ap_const_lv32_6 = "110";
const sc_lv<32> AXISTry::ap_const_lv32_A = "1010";
const sc_lv<32> AXISTry::ap_const_lv32_4 = "100";
const sc_lv<32> AXISTry::ap_const_lv32_7 = "111";
const sc_lv<32> AXISTry::ap_const_lv32_14 = "10100";
const sc_lv<32> AXISTry::ap_const_lv32_1D = "11101";
const sc_lv<32> AXISTry::ap_const_lv32_1 = "1";
const sc_lv<32> AXISTry::ap_const_lv32_2 = "10";
const sc_lv<32> AXISTry::ap_const_lv32_5 = "101";
const sc_lv<32> AXISTry::ap_const_lv32_8 = "1000";
const sc_lv<32> AXISTry::ap_const_lv32_9 = "1001";
const sc_lv<32> AXISTry::ap_const_lv32_B = "1011";
const sc_lv<32> AXISTry::ap_const_lv32_C = "1100";
const sc_lv<32> AXISTry::ap_const_lv32_D = "1101";
const sc_lv<32> AXISTry::ap_const_lv32_E = "1110";
const sc_lv<32> AXISTry::ap_const_lv32_F = "1111";
const sc_lv<32> AXISTry::ap_const_lv32_12 = "10010";
const sc_lv<32> AXISTry::ap_const_lv32_15 = "10101";
const sc_lv<32> AXISTry::ap_const_lv32_16 = "10110";
const sc_lv<32> AXISTry::ap_const_lv32_17 = "10111";
const sc_lv<32> AXISTry::ap_const_lv32_18 = "11000";
const sc_lv<32> AXISTry::ap_const_lv32_1B = "11011";
const sc_lv<32> AXISTry::ap_const_lv32_1C = "11100";
const sc_lv<4> AXISTry::ap_const_lv4_0 = "0000";
const sc_lv<32> AXISTry::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<3> AXISTry::ap_const_lv3_0 = "000";
const sc_lv<6> AXISTry::ap_const_lv6_0 = "000000";
const sc_lv<32> AXISTry::ap_const_lv32_13 = "10011";
const sc_lv<16> AXISTry::ap_const_lv16_0 = "0000000000000000";
const sc_lv<15> AXISTry::ap_const_lv15_0 = "000000000000000";
const sc_lv<32> AXISTry::ap_const_lv32_3039 = "11000000111001";
const sc_lv<32> AXISTry::ap_const_lv32_10 = "10000";
const sc_lv<16> AXISTry::ap_const_lv16_3FF = "1111111111";
const sc_lv<16> AXISTry::ap_const_lv16_FC00 = "1111110000000000";
const sc_lv<32> AXISTry::ap_const_lv32_11 = "10001";
const sc_lv<32> AXISTry::ap_const_lv32_19 = "11001";
const sc_lv<32> AXISTry::ap_const_lv32_1A = "11010";
const sc_lv<4> AXISTry::ap_const_lv4_D = "1101";
const sc_lv<4> AXISTry::ap_const_lv4_1 = "1";
const sc_lv<3> AXISTry::ap_const_lv3_5 = "101";
const sc_lv<3> AXISTry::ap_const_lv3_1 = "1";
const sc_lv<6> AXISTry::ap_const_lv6_24 = "100100";
const sc_lv<6> AXISTry::ap_const_lv6_1 = "1";
const sc_lv<13> AXISTry::ap_const_lv13_400 = "10000000000";

AXISTry::AXISTry(sc_module_name name) : sc_module(name), mVcdFile(0) {
    weights_IH_U = new AXISTry_weights_IH("weights_IH_U");
    weights_IH_U->clk(ap_clk);
    weights_IH_U->reset(ap_rst_n_inv);
    weights_IH_U->address0(weights_IH_address0);
    weights_IH_U->ce0(weights_IH_ce0);
    weights_IH_U->we0(weights_IH_we0);
    weights_IH_U->d0(weights_IH_d0);
    weights_IH_U->q0(weights_IH_q0);
    weights_HO_U = new AXISTry_weights_HO("weights_HO_U");
    weights_HO_U->clk(ap_clk);
    weights_HO_U->reset(ap_rst_n_inv);
    weights_HO_U->address0(weights_HO_address0);
    weights_HO_U->ce0(weights_HO_ce0);
    weights_HO_U->we0(weights_HO_we0);
    weights_HO_U->d0(weights_HO_d0);
    weights_HO_U->q0(weights_HO_q0);
    test_data_U = new AXISTry_test_data("test_data_U");
    test_data_U->clk(ap_clk);
    test_data_U->reset(ap_rst_n_inv);
    test_data_U->address0(test_data_address0);
    test_data_U->ce0(test_data_ce0);
    test_data_U->we0(test_data_we0);
    test_data_U->d0(test_data_d0);
    test_data_U->q0(test_data_q0);
    values_hidden_layer_U = new AXISTry_values_hibkb("values_hidden_layer_U");
    values_hidden_layer_U->clk(ap_clk);
    values_hidden_layer_U->reset(ap_rst_n_inv);
    values_hidden_layer_U->address0(values_hidden_layer_address0);
    values_hidden_layer_U->ce0(values_hidden_layer_ce0);
    values_hidden_layer_U->we0(values_hidden_layer_we0);
    values_hidden_layer_U->d0(values_hidden_layer_d0);
    values_hidden_layer_U->q0(values_hidden_layer_q0);
    sigmoid_arr_U = new AXISTry_sigmoid_arr("sigmoid_arr_U");
    sigmoid_arr_U->clk(ap_clk);
    sigmoid_arr_U->reset(ap_rst_n_inv);
    sigmoid_arr_U->address0(sigmoid_arr_address0);
    sigmoid_arr_U->ce0(sigmoid_arr_ce0);
    sigmoid_arr_U->q0(sigmoid_arr_q0);
    values_output_layer_U = new AXISTry_values_oucud("values_output_layer_U");
    values_output_layer_U->clk(ap_clk);
    values_output_layer_U->reset(ap_rst_n_inv);
    values_output_layer_U->address0(values_output_layer_s_reg_1041);
    values_output_layer_U->ce0(values_output_layer_ce0);
    values_output_layer_U->we0(values_output_layer_we0);
    values_output_layer_U->d0(values_output_layer_d0);
    values_output_layer_U->q0(values_output_layer_q0);
    AXISTry_mul_mul_1dEe_U0 = new AXISTry_mul_mul_1dEe<1,1,16,16,24>("AXISTry_mul_mul_1dEe_U0");
    AXISTry_mul_mul_1dEe_U0->din0(test_data_load_reg_1002);
    AXISTry_mul_mul_1dEe_U0->din1(weights_IH_load_reg_1007);
    AXISTry_mul_mul_1dEe_U0->dout(tmp_2_i_fu_865_p2);
    AXISTry_mul_mul_1dEe_U1 = new AXISTry_mul_mul_1dEe<1,1,16,16,24>("AXISTry_mul_mul_1dEe_U1");
    AXISTry_mul_mul_1dEe_U1->din0(values_hidden_layer_4_reg_1077);
    AXISTry_mul_mul_1dEe_U1->din1(weights_HO_load_reg_1082);
    AXISTry_mul_mul_1dEe_U1->dout(tmp_2_i3_fu_872_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_M_AXIS_TDATA);
    sensitive << ( M_AXIS_V_data_1_data_out );

    SC_METHOD(thread_M_AXIS_TDATA_blk_n);
    sensitive << ( M_AXIS_V_data_1_state );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_495_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( exitcond8_fu_712_p2 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_M_AXIS_TLAST);
    sensitive << ( M_AXIS_V_last_1_data_out );

    SC_METHOD(thread_M_AXIS_TVALID);
    sensitive << ( M_AXIS_V_last_1_state );

    SC_METHOD(thread_M_AXIS_V_data_1_ack_in);
    sensitive << ( M_AXIS_V_data_1_state );

    SC_METHOD(thread_M_AXIS_V_data_1_ack_out);
    sensitive << ( M_AXIS_TREADY );

    SC_METHOD(thread_M_AXIS_V_data_1_data_in);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_495_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( exitcond8_fu_712_p2 );
    sensitive << ( tmp_data_fu_120 );

    SC_METHOD(thread_M_AXIS_V_data_1_data_out);
    sensitive << ( M_AXIS_V_data_1_payload_A );
    sensitive << ( M_AXIS_V_data_1_payload_B );
    sensitive << ( M_AXIS_V_data_1_sel );

    SC_METHOD(thread_M_AXIS_V_data_1_load_A);
    sensitive << ( M_AXIS_V_data_1_sel_wr );
    sensitive << ( M_AXIS_V_data_1_state_cmp_full );

    SC_METHOD(thread_M_AXIS_V_data_1_load_B);
    sensitive << ( M_AXIS_V_data_1_sel_wr );
    sensitive << ( M_AXIS_V_data_1_state_cmp_full );

    SC_METHOD(thread_M_AXIS_V_data_1_sel);
    sensitive << ( M_AXIS_V_data_1_sel_rd );

    SC_METHOD(thread_M_AXIS_V_data_1_state_cmp_full);
    sensitive << ( M_AXIS_V_data_1_state );

    SC_METHOD(thread_M_AXIS_V_data_1_vld_in);
    sensitive << ( M_AXIS_V_data_1_ack_in );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_495_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( exitcond8_fu_712_p2 );

    SC_METHOD(thread_M_AXIS_V_data_1_vld_out);
    sensitive << ( M_AXIS_V_data_1_state );

    SC_METHOD(thread_M_AXIS_V_last_1_ack_in);
    sensitive << ( M_AXIS_V_last_1_state );

    SC_METHOD(thread_M_AXIS_V_last_1_ack_out);
    sensitive << ( M_AXIS_TREADY );

    SC_METHOD(thread_M_AXIS_V_last_1_data_out);
    sensitive << ( M_AXIS_V_last_1_sel );

    SC_METHOD(thread_M_AXIS_V_last_1_sel);
    sensitive << ( M_AXIS_V_last_1_sel_rd );

    SC_METHOD(thread_M_AXIS_V_last_1_vld_in);
    sensitive << ( M_AXIS_V_data_1_ack_in );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_495_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( exitcond8_fu_712_p2 );

    SC_METHOD(thread_M_AXIS_V_last_1_vld_out);
    sensitive << ( M_AXIS_V_last_1_state );

    SC_METHOD(thread_S_AXIS_TDATA_blk_n);
    sensitive << ( S_AXIS_V_data_0_state );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_S_AXIS_TREADY);
    sensitive << ( S_AXIS_V_last_0_state );

    SC_METHOD(thread_S_AXIS_V_data_0_ack_in);
    sensitive << ( S_AXIS_V_data_0_state );

    SC_METHOD(thread_S_AXIS_V_data_0_ack_out);
    sensitive << ( S_AXIS_V_data_0_vld_out );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_S_AXIS_V_data_0_data_out);
    sensitive << ( S_AXIS_V_data_0_payload_A );
    sensitive << ( S_AXIS_V_data_0_payload_B );
    sensitive << ( S_AXIS_V_data_0_sel );

    SC_METHOD(thread_S_AXIS_V_data_0_load_A);
    sensitive << ( S_AXIS_V_data_0_sel_wr );
    sensitive << ( S_AXIS_V_data_0_state_cmp_full );

    SC_METHOD(thread_S_AXIS_V_data_0_load_B);
    sensitive << ( S_AXIS_V_data_0_sel_wr );
    sensitive << ( S_AXIS_V_data_0_state_cmp_full );

    SC_METHOD(thread_S_AXIS_V_data_0_sel);
    sensitive << ( S_AXIS_V_data_0_sel_rd );

    SC_METHOD(thread_S_AXIS_V_data_0_state_cmp_full);
    sensitive << ( S_AXIS_V_data_0_state );

    SC_METHOD(thread_S_AXIS_V_data_0_vld_in);
    sensitive << ( S_AXIS_TVALID );

    SC_METHOD(thread_S_AXIS_V_data_0_vld_out);
    sensitive << ( S_AXIS_V_data_0_state );

    SC_METHOD(thread_S_AXIS_V_last_0_ack_out);
    sensitive << ( S_AXIS_V_data_0_vld_out );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_S_AXIS_V_last_0_vld_in);
    sensitive << ( S_AXIS_TVALID );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_exitcond1_fu_434_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_256 );

    SC_METHOD(thread_exitcond2_fu_495_p2);
    sensitive << ( M_AXIS_V_data_1_ack_in );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_495_p2 );
    sensitive << ( i_1_reg_278 );

    SC_METHOD(thread_exitcond3_fu_460_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_267 );

    SC_METHOD(thread_exitcond4_fu_538_p2);
    sensitive << ( M_AXIS_V_data_1_ack_in );
    sensitive << ( M_AXIS_V_last_1_ack_in );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( k_reg_300 );

    SC_METHOD(thread_exitcond5_fu_521_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( j_1_reg_289 );

    SC_METHOD(thread_exitcond6_fu_554_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( i_2_reg_311 );

    SC_METHOD(thread_exitcond7_fu_580_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( i_3_reg_322 );

    SC_METHOD(thread_exitcond8_fu_712_p2);
    sensitive << ( M_AXIS_V_data_1_ack_in );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( exitcond8_fu_712_p2 );
    sensitive << ( i_4_reg_357 );

    SC_METHOD(thread_exitcond9_fu_629_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( j_2_reg_346 );

    SC_METHOD(thread_exitcond_fu_757_p2);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( j_3_reg_393 );

    SC_METHOD(thread_highest_pred_1_cast6_fu_831_p1);
    sensitive << ( sigmoid_arr_q0 );

    SC_METHOD(thread_highest_pred_1_fu_826_p1);
    sensitive << ( sigmoid_arr_q0 );

    SC_METHOD(thread_highest_pred_2_highe_fu_852_p3);
    sensitive << ( highest_pred_reg_368 );
    sensitive << ( highest_pred_1_cast6_fu_831_p1 );
    sensitive << ( tmp_16_fu_835_p2 );

    SC_METHOD(thread_i_1_cast7_cast_fu_477_p1);
    sensitive << ( i_1_reg_278 );

    SC_METHOD(thread_i_2_cast5_fu_550_p1);
    sensitive << ( i_2_reg_311 );

    SC_METHOD(thread_i_3_cast4_cast_fu_576_p1);
    sensitive << ( i_3_reg_322 );

    SC_METHOD(thread_i_3_cast4_fu_571_p1);
    sensitive << ( i_3_reg_322 );

    SC_METHOD(thread_i_4_cast2_cast_fu_708_p1);
    sensitive << ( i_4_reg_357 );

    SC_METHOD(thread_i_4_cast2_fu_703_p1);
    sensitive << ( i_4_reg_357 );

    SC_METHOD(thread_i_5_fu_440_p2);
    sensitive << ( i_reg_256 );

    SC_METHOD(thread_i_6_fu_501_p2);
    sensitive << ( i_1_reg_278 );

    SC_METHOD(thread_i_7_fu_560_p2);
    sensitive << ( i_2_reg_311 );

    SC_METHOD(thread_i_8_fu_586_p2);
    sensitive << ( i_3_reg_322 );

    SC_METHOD(thread_i_cast9_cast_fu_412_p1);
    sensitive << ( i_reg_256 );

    SC_METHOD(thread_icmp1_fu_785_p2);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( exitcond_fu_757_p2 );
    sensitive << ( tmp_8_fu_769_p2 );
    sensitive << ( tmp_28_fu_775_p4 );

    SC_METHOD(thread_icmp_fu_657_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond9_fu_629_p2 );
    sensitive << ( tmp_2_fu_641_p2 );
    sensitive << ( tmp_27_fu_647_p4 );

    SC_METHOD(thread_j_1_cast6_cast_fu_507_p1);
    sensitive << ( j_1_reg_289 );

    SC_METHOD(thread_j_2_cast3_cast_fu_597_p1);
    sensitive << ( j_2_reg_346 );

    SC_METHOD(thread_j_2_cast3_fu_592_p1);
    sensitive << ( j_2_reg_346 );

    SC_METHOD(thread_j_3_cast1_cast_fu_729_p1);
    sensitive << ( j_3_reg_393 );

    SC_METHOD(thread_j_3_cast1_fu_724_p1);
    sensitive << ( j_3_reg_393 );

    SC_METHOD(thread_j_4_fu_466_p2);
    sensitive << ( j_reg_267 );

    SC_METHOD(thread_j_5_fu_527_p2);
    sensitive << ( j_1_reg_289 );

    SC_METHOD(thread_j_6_fu_635_p2);
    sensitive << ( j_2_reg_346 );

    SC_METHOD(thread_j_7_fu_763_p2);
    sensitive << ( j_3_reg_393 );

    SC_METHOD(thread_j_cast8_cast_fu_446_p1);
    sensitive << ( j_reg_267 );

    SC_METHOD(thread_k_1_fu_544_p2);
    sensitive << ( k_reg_300 );

    SC_METHOD(thread_p_shl2_cast_fu_609_p1);
    sensitive << ( tmp_21_fu_601_p3 );

    SC_METHOD(thread_p_shl_cast_fu_424_p1);
    sensitive << ( tmp_s_fu_416_p3 );

    SC_METHOD(thread_prediction_cast_fu_841_p1);
    sensitive << ( prediction_reg_1035 );

    SC_METHOD(thread_prediction_fu_718_p2);
    sensitive << ( i_4_reg_357 );

    SC_METHOD(thread_prediction_write_out_fu_844_p3);
    sensitive << ( tmp_data_fu_120 );
    sensitive << ( tmp_16_fu_835_p2 );
    sensitive << ( prediction_cast_fu_841_p1 );

    SC_METHOD(thread_sigmoid_arr_address0);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( tmp_14_cast_fu_693_p1 );
    sensitive << ( tmp_17_cast_fu_821_p1 );

    SC_METHOD(thread_sigmoid_arr_ce0);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_test_data_address0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( i_2_cast5_reg_945 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( j_2_cast3_fu_592_p1 );

    SC_METHOD(thread_test_data_ce0);
    sensitive << ( S_AXIS_V_data_0_vld_out );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_test_data_d0);
    sensitive << ( S_AXIS_V_data_0_data_out );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_test_data_we0);
    sensitive << ( S_AXIS_V_data_0_vld_out );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_tmp_11_fu_806_p2);
    sensitive << ( tmp_10_reg_1087 );
    sensitive << ( values_output_layer_1_reg_380 );

    SC_METHOD(thread_tmp_12_fu_450_p2);
    sensitive << ( tmp_1_reg_879 );
    sensitive << ( j_cast8_cast_fu_446_p1 );

    SC_METHOD(thread_tmp_13_fu_687_p2);
    sensitive << ( tmp_29_fu_683_p1 );

    SC_METHOD(thread_tmp_14_cast_fu_693_p1);
    sensitive << ( tmp_13_fu_687_p2 );

    SC_METHOD(thread_tmp_14_fu_698_p1);
    sensitive << ( sigmoid_arr_q0 );

    SC_METHOD(thread_tmp_15_fu_815_p2);
    sensitive << ( tmp_30_fu_811_p1 );

    SC_METHOD(thread_tmp_16_fu_835_p2);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( highest_pred_reg_368 );
    sensitive << ( highest_pred_1_cast6_fu_831_p1 );

    SC_METHOD(thread_tmp_17_cast_fu_821_p1);
    sensitive << ( tmp_15_fu_815_p2 );

    SC_METHOD(thread_tmp_18_fu_511_p2);
    sensitive << ( tmp_7_reg_905 );
    sensitive << ( j_1_cast6_cast_fu_507_p1 );

    SC_METHOD(thread_tmp_1_fu_428_p2);
    sensitive << ( i_cast9_cast_fu_412_p1 );
    sensitive << ( p_shl_cast_fu_424_p1 );

    SC_METHOD(thread_tmp_21_cast_fu_455_p1);
    sensitive << ( tmp_12_fu_450_p2 );

    SC_METHOD(thread_tmp_21_fu_601_p3);
    sensitive << ( j_2_reg_346 );

    SC_METHOD(thread_tmp_22_cast_fu_516_p1);
    sensitive << ( tmp_18_fu_511_p2 );

    SC_METHOD(thread_tmp_22_fu_613_p2);
    sensitive << ( j_2_cast3_cast_fu_597_p1 );
    sensitive << ( p_shl2_cast_fu_609_p1 );

    SC_METHOD(thread_tmp_23_fu_619_p2);
    sensitive << ( i_3_cast4_cast_reg_958 );
    sensitive << ( tmp_22_fu_613_p2 );

    SC_METHOD(thread_tmp_24_fu_733_p3);
    sensitive << ( j_3_reg_393 );

    SC_METHOD(thread_tmp_25_cast_fu_624_p1);
    sensitive << ( tmp_23_fu_619_p2 );

    SC_METHOD(thread_tmp_25_fu_741_p2);
    sensitive << ( tmp_24_fu_733_p3 );
    sensitive << ( j_3_cast1_cast_fu_729_p1 );

    SC_METHOD(thread_tmp_26_fu_747_p2);
    sensitive << ( i_4_cast2_cast_reg_1027 );
    sensitive << ( tmp_25_fu_741_p2 );

    SC_METHOD(thread_tmp_27_fu_647_p4);
    sensitive << ( values_hidden_layer_1_reg_333 );

    SC_METHOD(thread_tmp_28_cast_fu_752_p1);
    sensitive << ( tmp_26_fu_747_p2 );

    SC_METHOD(thread_tmp_28_fu_775_p4);
    sensitive << ( values_output_layer_1_reg_380 );

    SC_METHOD(thread_tmp_29_fu_683_p1);
    sensitive << ( values_hidden_layer_q0 );

    SC_METHOD(thread_tmp_2_fu_641_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond9_fu_629_p2 );
    sensitive << ( values_hidden_layer_1_reg_333 );

    SC_METHOD(thread_tmp_30_fu_811_p1);
    sensitive << ( values_output_layer_q0 );

    SC_METHOD(thread_tmp_5_fu_678_p2);
    sensitive << ( tmp_4_reg_1012 );
    sensitive << ( values_hidden_layer_1_reg_333 );

    SC_METHOD(thread_tmp_6_fu_481_p3);
    sensitive << ( i_1_reg_278 );

    SC_METHOD(thread_tmp_7_fu_489_p2);
    sensitive << ( tmp_6_fu_481_p3 );
    sensitive << ( i_1_cast7_cast_fu_477_p1 );

    SC_METHOD(thread_tmp_8_fu_769_p2);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( exitcond_fu_757_p2 );
    sensitive << ( values_output_layer_1_reg_380 );

    SC_METHOD(thread_tmp_s_fu_416_p3);
    sensitive << ( i_reg_256 );

    SC_METHOD(thread_values_hidden_layer_address0);
    sensitive << ( values_hidden_layer_s_reg_971 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_2_reg_994 );
    sensitive << ( icmp_reg_998 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( j_3_cast1_fu_724_p1 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_values_hidden_layer_ce0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_2_reg_994 );
    sensitive << ( icmp_reg_998 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_values_hidden_layer_d0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_2_reg_994 );
    sensitive << ( icmp_reg_998 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( values_hidden_layer_1_reg_333 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_14_fu_698_p1 );

    SC_METHOD(thread_values_hidden_layer_we0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_2_reg_994 );
    sensitive << ( icmp_reg_998 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_values_output_layer_ce0);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( tmp_8_reg_1069 );
    sensitive << ( icmp1_reg_1073 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_values_output_layer_d0);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( tmp_8_reg_1069 );
    sensitive << ( icmp1_reg_1073 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( values_output_layer_1_reg_380 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( highest_pred_1_fu_826_p1 );

    SC_METHOD(thread_values_output_layer_we0);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( tmp_8_reg_1069 );
    sensitive << ( icmp1_reg_1073 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_weights_HO_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( weights_HO_addr_reg_924 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( tmp_28_cast_fu_752_p1 );

    SC_METHOD(thread_weights_HO_ce0);
    sensitive << ( S_AXIS_V_data_0_vld_out );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_weights_HO_d0);
    sensitive << ( S_AXIS_V_data_0_data_out );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_weights_HO_we0);
    sensitive << ( S_AXIS_V_data_0_vld_out );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_weights_IH_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( weights_IH_addr_reg_892 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_25_cast_fu_624_p1 );

    SC_METHOD(thread_weights_IH_ce0);
    sensitive << ( S_AXIS_V_data_0_vld_out );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_weights_IH_d0);
    sensitive << ( S_AXIS_V_data_0_data_out );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_weights_IH_we0);
    sensitive << ( S_AXIS_V_data_0_vld_out );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( S_AXIS_V_data_0_vld_out );
    sensitive << ( M_AXIS_V_data_1_ack_in );
    sensitive << ( M_AXIS_V_last_1_ack_in );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond2_fu_495_p2 );
    sensitive << ( exitcond8_fu_712_p2 );
    sensitive << ( exitcond4_fu_538_p2 );
    sensitive << ( exitcond7_fu_580_p2 );
    sensitive << ( exitcond9_fu_629_p2 );
    sensitive << ( exitcond_fu_757_p2 );
    sensitive << ( exitcond3_fu_460_p2 );
    sensitive << ( exitcond1_fu_434_p2 );
    sensitive << ( exitcond5_fu_521_p2 );
    sensitive << ( exitcond6_fu_554_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    S_AXIS_V_data_0_sel_rd = SC_LOGIC_0;
    S_AXIS_V_data_0_sel_wr = SC_LOGIC_0;
    S_AXIS_V_data_0_state = "00";
    S_AXIS_V_last_0_state = "00";
    M_AXIS_V_data_1_sel_rd = SC_LOGIC_0;
    M_AXIS_V_data_1_sel_wr = SC_LOGIC_0;
    M_AXIS_V_data_1_state = "00";
    M_AXIS_V_last_1_sel_rd = SC_LOGIC_0;
    M_AXIS_V_last_1_state = "00";
    ap_CS_fsm = "000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "AXISTry_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, S_AXIS_TDATA, "(port)S_AXIS_TDATA");
    sc_trace(mVcdFile, S_AXIS_TVALID, "(port)S_AXIS_TVALID");
    sc_trace(mVcdFile, S_AXIS_TREADY, "(port)S_AXIS_TREADY");
    sc_trace(mVcdFile, S_AXIS_TLAST, "(port)S_AXIS_TLAST");
    sc_trace(mVcdFile, M_AXIS_TDATA, "(port)M_AXIS_TDATA");
    sc_trace(mVcdFile, M_AXIS_TVALID, "(port)M_AXIS_TVALID");
    sc_trace(mVcdFile, M_AXIS_TREADY, "(port)M_AXIS_TREADY");
    sc_trace(mVcdFile, M_AXIS_TLAST, "(port)M_AXIS_TLAST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, S_AXIS_V_data_0_data_out, "S_AXIS_V_data_0_data_out");
    sc_trace(mVcdFile, S_AXIS_V_data_0_vld_in, "S_AXIS_V_data_0_vld_in");
    sc_trace(mVcdFile, S_AXIS_V_data_0_vld_out, "S_AXIS_V_data_0_vld_out");
    sc_trace(mVcdFile, S_AXIS_V_data_0_ack_in, "S_AXIS_V_data_0_ack_in");
    sc_trace(mVcdFile, S_AXIS_V_data_0_ack_out, "S_AXIS_V_data_0_ack_out");
    sc_trace(mVcdFile, S_AXIS_V_data_0_payload_A, "S_AXIS_V_data_0_payload_A");
    sc_trace(mVcdFile, S_AXIS_V_data_0_payload_B, "S_AXIS_V_data_0_payload_B");
    sc_trace(mVcdFile, S_AXIS_V_data_0_sel_rd, "S_AXIS_V_data_0_sel_rd");
    sc_trace(mVcdFile, S_AXIS_V_data_0_sel_wr, "S_AXIS_V_data_0_sel_wr");
    sc_trace(mVcdFile, S_AXIS_V_data_0_sel, "S_AXIS_V_data_0_sel");
    sc_trace(mVcdFile, S_AXIS_V_data_0_load_A, "S_AXIS_V_data_0_load_A");
    sc_trace(mVcdFile, S_AXIS_V_data_0_load_B, "S_AXIS_V_data_0_load_B");
    sc_trace(mVcdFile, S_AXIS_V_data_0_state, "S_AXIS_V_data_0_state");
    sc_trace(mVcdFile, S_AXIS_V_data_0_state_cmp_full, "S_AXIS_V_data_0_state_cmp_full");
    sc_trace(mVcdFile, S_AXIS_V_last_0_vld_in, "S_AXIS_V_last_0_vld_in");
    sc_trace(mVcdFile, S_AXIS_V_last_0_ack_out, "S_AXIS_V_last_0_ack_out");
    sc_trace(mVcdFile, S_AXIS_V_last_0_state, "S_AXIS_V_last_0_state");
    sc_trace(mVcdFile, M_AXIS_V_data_1_data_in, "M_AXIS_V_data_1_data_in");
    sc_trace(mVcdFile, M_AXIS_V_data_1_data_out, "M_AXIS_V_data_1_data_out");
    sc_trace(mVcdFile, M_AXIS_V_data_1_vld_in, "M_AXIS_V_data_1_vld_in");
    sc_trace(mVcdFile, M_AXIS_V_data_1_vld_out, "M_AXIS_V_data_1_vld_out");
    sc_trace(mVcdFile, M_AXIS_V_data_1_ack_in, "M_AXIS_V_data_1_ack_in");
    sc_trace(mVcdFile, M_AXIS_V_data_1_ack_out, "M_AXIS_V_data_1_ack_out");
    sc_trace(mVcdFile, M_AXIS_V_data_1_payload_A, "M_AXIS_V_data_1_payload_A");
    sc_trace(mVcdFile, M_AXIS_V_data_1_payload_B, "M_AXIS_V_data_1_payload_B");
    sc_trace(mVcdFile, M_AXIS_V_data_1_sel_rd, "M_AXIS_V_data_1_sel_rd");
    sc_trace(mVcdFile, M_AXIS_V_data_1_sel_wr, "M_AXIS_V_data_1_sel_wr");
    sc_trace(mVcdFile, M_AXIS_V_data_1_sel, "M_AXIS_V_data_1_sel");
    sc_trace(mVcdFile, M_AXIS_V_data_1_load_A, "M_AXIS_V_data_1_load_A");
    sc_trace(mVcdFile, M_AXIS_V_data_1_load_B, "M_AXIS_V_data_1_load_B");
    sc_trace(mVcdFile, M_AXIS_V_data_1_state, "M_AXIS_V_data_1_state");
    sc_trace(mVcdFile, M_AXIS_V_data_1_state_cmp_full, "M_AXIS_V_data_1_state_cmp_full");
    sc_trace(mVcdFile, M_AXIS_V_last_1_data_out, "M_AXIS_V_last_1_data_out");
    sc_trace(mVcdFile, M_AXIS_V_last_1_vld_in, "M_AXIS_V_last_1_vld_in");
    sc_trace(mVcdFile, M_AXIS_V_last_1_vld_out, "M_AXIS_V_last_1_vld_out");
    sc_trace(mVcdFile, M_AXIS_V_last_1_ack_in, "M_AXIS_V_last_1_ack_in");
    sc_trace(mVcdFile, M_AXIS_V_last_1_ack_out, "M_AXIS_V_last_1_ack_out");
    sc_trace(mVcdFile, M_AXIS_V_last_1_sel_rd, "M_AXIS_V_last_1_sel_rd");
    sc_trace(mVcdFile, M_AXIS_V_last_1_sel, "M_AXIS_V_last_1_sel");
    sc_trace(mVcdFile, M_AXIS_V_last_1_state, "M_AXIS_V_last_1_state");
    sc_trace(mVcdFile, weights_IH_address0, "weights_IH_address0");
    sc_trace(mVcdFile, weights_IH_ce0, "weights_IH_ce0");
    sc_trace(mVcdFile, weights_IH_we0, "weights_IH_we0");
    sc_trace(mVcdFile, weights_IH_d0, "weights_IH_d0");
    sc_trace(mVcdFile, weights_IH_q0, "weights_IH_q0");
    sc_trace(mVcdFile, weights_HO_address0, "weights_HO_address0");
    sc_trace(mVcdFile, weights_HO_ce0, "weights_HO_ce0");
    sc_trace(mVcdFile, weights_HO_we0, "weights_HO_we0");
    sc_trace(mVcdFile, weights_HO_d0, "weights_HO_d0");
    sc_trace(mVcdFile, weights_HO_q0, "weights_HO_q0");
    sc_trace(mVcdFile, test_data_address0, "test_data_address0");
    sc_trace(mVcdFile, test_data_ce0, "test_data_ce0");
    sc_trace(mVcdFile, test_data_we0, "test_data_we0");
    sc_trace(mVcdFile, test_data_d0, "test_data_d0");
    sc_trace(mVcdFile, test_data_q0, "test_data_q0");
    sc_trace(mVcdFile, values_hidden_layer_address0, "values_hidden_layer_address0");
    sc_trace(mVcdFile, values_hidden_layer_ce0, "values_hidden_layer_ce0");
    sc_trace(mVcdFile, values_hidden_layer_we0, "values_hidden_layer_we0");
    sc_trace(mVcdFile, values_hidden_layer_d0, "values_hidden_layer_d0");
    sc_trace(mVcdFile, values_hidden_layer_q0, "values_hidden_layer_q0");
    sc_trace(mVcdFile, sigmoid_arr_address0, "sigmoid_arr_address0");
    sc_trace(mVcdFile, sigmoid_arr_ce0, "sigmoid_arr_ce0");
    sc_trace(mVcdFile, sigmoid_arr_q0, "sigmoid_arr_q0");
    sc_trace(mVcdFile, values_output_layer_ce0, "values_output_layer_ce0");
    sc_trace(mVcdFile, values_output_layer_we0, "values_output_layer_we0");
    sc_trace(mVcdFile, values_output_layer_d0, "values_output_layer_d0");
    sc_trace(mVcdFile, values_output_layer_q0, "values_output_layer_q0");
    sc_trace(mVcdFile, S_AXIS_TDATA_blk_n, "S_AXIS_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, M_AXIS_TDATA_blk_n, "M_AXIS_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, exitcond2_fu_495_p2, "exitcond2_fu_495_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, exitcond8_fu_712_p2, "exitcond8_fu_712_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, tmp_1_fu_428_p2, "tmp_1_fu_428_p2");
    sc_trace(mVcdFile, tmp_1_reg_879, "tmp_1_reg_879");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_5_fu_440_p2, "i_5_fu_440_p2");
    sc_trace(mVcdFile, i_5_reg_887, "i_5_reg_887");
    sc_trace(mVcdFile, weights_IH_addr_reg_892, "weights_IH_addr_reg_892");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, j_4_fu_466_p2, "j_4_fu_466_p2");
    sc_trace(mVcdFile, j_4_reg_900, "j_4_reg_900");
    sc_trace(mVcdFile, tmp_7_fu_489_p2, "tmp_7_fu_489_p2");
    sc_trace(mVcdFile, tmp_7_reg_905, "tmp_7_reg_905");
    sc_trace(mVcdFile, i_6_fu_501_p2, "i_6_fu_501_p2");
    sc_trace(mVcdFile, i_6_reg_913, "i_6_reg_913");
    sc_trace(mVcdFile, weights_HO_addr_reg_924, "weights_HO_addr_reg_924");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, j_5_fu_527_p2, "j_5_fu_527_p2");
    sc_trace(mVcdFile, j_5_reg_932, "j_5_reg_932");
    sc_trace(mVcdFile, k_1_fu_544_p2, "k_1_fu_544_p2");
    sc_trace(mVcdFile, k_1_reg_940, "k_1_reg_940");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, exitcond4_fu_538_p2, "exitcond4_fu_538_p2");
    sc_trace(mVcdFile, i_2_cast5_fu_550_p1, "i_2_cast5_fu_550_p1");
    sc_trace(mVcdFile, i_2_cast5_reg_945, "i_2_cast5_reg_945");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, i_7_fu_560_p2, "i_7_fu_560_p2");
    sc_trace(mVcdFile, i_7_reg_953, "i_7_reg_953");
    sc_trace(mVcdFile, i_3_cast4_cast_fu_576_p1, "i_3_cast4_cast_fu_576_p1");
    sc_trace(mVcdFile, i_3_cast4_cast_reg_958, "i_3_cast4_cast_reg_958");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, i_8_fu_586_p2, "i_8_fu_586_p2");
    sc_trace(mVcdFile, i_8_reg_966, "i_8_reg_966");
    sc_trace(mVcdFile, values_hidden_layer_s_reg_971, "values_hidden_layer_s_reg_971");
    sc_trace(mVcdFile, exitcond7_fu_580_p2, "exitcond7_fu_580_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, j_6_fu_635_p2, "j_6_fu_635_p2");
    sc_trace(mVcdFile, j_6_reg_984, "j_6_reg_984");
    sc_trace(mVcdFile, exitcond9_fu_629_p2, "exitcond9_fu_629_p2");
    sc_trace(mVcdFile, tmp_2_fu_641_p2, "tmp_2_fu_641_p2");
    sc_trace(mVcdFile, tmp_2_reg_994, "tmp_2_reg_994");
    sc_trace(mVcdFile, icmp_fu_657_p2, "icmp_fu_657_p2");
    sc_trace(mVcdFile, icmp_reg_998, "icmp_reg_998");
    sc_trace(mVcdFile, test_data_load_reg_1002, "test_data_load_reg_1002");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, weights_IH_load_reg_1007, "weights_IH_load_reg_1007");
    sc_trace(mVcdFile, tmp_4_reg_1012, "tmp_4_reg_1012");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, tmp_5_fu_678_p2, "tmp_5_fu_678_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, i_4_cast2_cast_fu_708_p1, "i_4_cast2_cast_fu_708_p1");
    sc_trace(mVcdFile, i_4_cast2_cast_reg_1027, "i_4_cast2_cast_reg_1027");
    sc_trace(mVcdFile, prediction_fu_718_p2, "prediction_fu_718_p2");
    sc_trace(mVcdFile, prediction_reg_1035, "prediction_reg_1035");
    sc_trace(mVcdFile, values_output_layer_s_reg_1041, "values_output_layer_s_reg_1041");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, j_7_fu_763_p2, "j_7_fu_763_p2");
    sc_trace(mVcdFile, j_7_reg_1059, "j_7_reg_1059");
    sc_trace(mVcdFile, exitcond_fu_757_p2, "exitcond_fu_757_p2");
    sc_trace(mVcdFile, tmp_8_fu_769_p2, "tmp_8_fu_769_p2");
    sc_trace(mVcdFile, tmp_8_reg_1069, "tmp_8_reg_1069");
    sc_trace(mVcdFile, icmp1_fu_785_p2, "icmp1_fu_785_p2");
    sc_trace(mVcdFile, icmp1_reg_1073, "icmp1_reg_1073");
    sc_trace(mVcdFile, values_hidden_layer_4_reg_1077, "values_hidden_layer_4_reg_1077");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, weights_HO_load_reg_1082, "weights_HO_load_reg_1082");
    sc_trace(mVcdFile, tmp_10_reg_1087, "tmp_10_reg_1087");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, tmp_11_fu_806_p2, "tmp_11_fu_806_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, highest_pred_2_highe_fu_852_p3, "highest_pred_2_highe_fu_852_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, i_reg_256, "i_reg_256");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, exitcond3_fu_460_p2, "exitcond3_fu_460_p2");
    sc_trace(mVcdFile, j_reg_267, "j_reg_267");
    sc_trace(mVcdFile, exitcond1_fu_434_p2, "exitcond1_fu_434_p2");
    sc_trace(mVcdFile, i_1_reg_278, "i_1_reg_278");
    sc_trace(mVcdFile, exitcond5_fu_521_p2, "exitcond5_fu_521_p2");
    sc_trace(mVcdFile, j_1_reg_289, "j_1_reg_289");
    sc_trace(mVcdFile, k_reg_300, "k_reg_300");
    sc_trace(mVcdFile, i_2_reg_311, "i_2_reg_311");
    sc_trace(mVcdFile, i_3_reg_322, "i_3_reg_322");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, exitcond6_fu_554_p2, "exitcond6_fu_554_p2");
    sc_trace(mVcdFile, values_hidden_layer_1_reg_333, "values_hidden_layer_1_reg_333");
    sc_trace(mVcdFile, j_2_reg_346, "j_2_reg_346");
    sc_trace(mVcdFile, i_4_reg_357, "i_4_reg_357");
    sc_trace(mVcdFile, highest_pred_reg_368, "highest_pred_reg_368");
    sc_trace(mVcdFile, values_output_layer_1_reg_380, "values_output_layer_1_reg_380");
    sc_trace(mVcdFile, j_3_reg_393, "j_3_reg_393");
    sc_trace(mVcdFile, tmp_21_cast_fu_455_p1, "tmp_21_cast_fu_455_p1");
    sc_trace(mVcdFile, tmp_22_cast_fu_516_p1, "tmp_22_cast_fu_516_p1");
    sc_trace(mVcdFile, i_3_cast4_fu_571_p1, "i_3_cast4_fu_571_p1");
    sc_trace(mVcdFile, tmp_25_cast_fu_624_p1, "tmp_25_cast_fu_624_p1");
    sc_trace(mVcdFile, j_2_cast3_fu_592_p1, "j_2_cast3_fu_592_p1");
    sc_trace(mVcdFile, tmp_14_cast_fu_693_p1, "tmp_14_cast_fu_693_p1");
    sc_trace(mVcdFile, i_4_cast2_fu_703_p1, "i_4_cast2_fu_703_p1");
    sc_trace(mVcdFile, tmp_28_cast_fu_752_p1, "tmp_28_cast_fu_752_p1");
    sc_trace(mVcdFile, j_3_cast1_fu_724_p1, "j_3_cast1_fu_724_p1");
    sc_trace(mVcdFile, tmp_17_cast_fu_821_p1, "tmp_17_cast_fu_821_p1");
    sc_trace(mVcdFile, tmp_data_fu_120, "tmp_data_fu_120");
    sc_trace(mVcdFile, prediction_write_out_fu_844_p3, "prediction_write_out_fu_844_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, tmp_14_fu_698_p1, "tmp_14_fu_698_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, highest_pred_1_fu_826_p1, "highest_pred_1_fu_826_p1");
    sc_trace(mVcdFile, tmp_s_fu_416_p3, "tmp_s_fu_416_p3");
    sc_trace(mVcdFile, i_cast9_cast_fu_412_p1, "i_cast9_cast_fu_412_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_424_p1, "p_shl_cast_fu_424_p1");
    sc_trace(mVcdFile, j_cast8_cast_fu_446_p1, "j_cast8_cast_fu_446_p1");
    sc_trace(mVcdFile, tmp_12_fu_450_p2, "tmp_12_fu_450_p2");
    sc_trace(mVcdFile, tmp_6_fu_481_p3, "tmp_6_fu_481_p3");
    sc_trace(mVcdFile, i_1_cast7_cast_fu_477_p1, "i_1_cast7_cast_fu_477_p1");
    sc_trace(mVcdFile, j_1_cast6_cast_fu_507_p1, "j_1_cast6_cast_fu_507_p1");
    sc_trace(mVcdFile, tmp_18_fu_511_p2, "tmp_18_fu_511_p2");
    sc_trace(mVcdFile, tmp_21_fu_601_p3, "tmp_21_fu_601_p3");
    sc_trace(mVcdFile, j_2_cast3_cast_fu_597_p1, "j_2_cast3_cast_fu_597_p1");
    sc_trace(mVcdFile, p_shl2_cast_fu_609_p1, "p_shl2_cast_fu_609_p1");
    sc_trace(mVcdFile, tmp_22_fu_613_p2, "tmp_22_fu_613_p2");
    sc_trace(mVcdFile, tmp_23_fu_619_p2, "tmp_23_fu_619_p2");
    sc_trace(mVcdFile, tmp_27_fu_647_p4, "tmp_27_fu_647_p4");
    sc_trace(mVcdFile, tmp_2_i_fu_865_p2, "tmp_2_i_fu_865_p2");
    sc_trace(mVcdFile, tmp_29_fu_683_p1, "tmp_29_fu_683_p1");
    sc_trace(mVcdFile, tmp_13_fu_687_p2, "tmp_13_fu_687_p2");
    sc_trace(mVcdFile, tmp_24_fu_733_p3, "tmp_24_fu_733_p3");
    sc_trace(mVcdFile, j_3_cast1_cast_fu_729_p1, "j_3_cast1_cast_fu_729_p1");
    sc_trace(mVcdFile, tmp_25_fu_741_p2, "tmp_25_fu_741_p2");
    sc_trace(mVcdFile, tmp_26_fu_747_p2, "tmp_26_fu_747_p2");
    sc_trace(mVcdFile, tmp_28_fu_775_p4, "tmp_28_fu_775_p4");
    sc_trace(mVcdFile, tmp_2_i3_fu_872_p2, "tmp_2_i3_fu_872_p2");
    sc_trace(mVcdFile, tmp_30_fu_811_p1, "tmp_30_fu_811_p1");
    sc_trace(mVcdFile, tmp_15_fu_815_p2, "tmp_15_fu_815_p2");
    sc_trace(mVcdFile, highest_pred_1_cast6_fu_831_p1, "highest_pred_1_cast6_fu_831_p1");
    sc_trace(mVcdFile, tmp_16_fu_835_p2, "tmp_16_fu_835_p2");
    sc_trace(mVcdFile, prediction_cast_fu_841_p1, "prediction_cast_fu_841_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("AXISTry.hdltvin.dat");
    mHdltvoutHandle.open("AXISTry.hdltvout.dat");
}

AXISTry::~AXISTry() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete weights_IH_U;
    delete weights_HO_U;
    delete test_data_U;
    delete values_hidden_layer_U;
    delete sigmoid_arr_U;
    delete values_output_layer_U;
    delete AXISTry_mul_mul_1dEe_U0;
    delete AXISTry_mul_mul_1dEe_U1;
}

void AXISTry::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        M_AXIS_V_data_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, M_AXIS_V_data_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, M_AXIS_V_data_1_vld_out.read()))) {
            M_AXIS_V_data_1_sel_rd =  (sc_logic) (~M_AXIS_V_data_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        M_AXIS_V_data_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, M_AXIS_V_data_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, M_AXIS_V_data_1_ack_in.read()))) {
            M_AXIS_V_data_1_sel_wr =  (sc_logic) (~M_AXIS_V_data_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        M_AXIS_V_data_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_data_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, M_AXIS_V_data_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, M_AXIS_V_data_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_data_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, M_AXIS_V_data_1_state.read())))) {
            M_AXIS_V_data_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, M_AXIS_V_data_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_data_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, M_AXIS_V_data_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_data_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, M_AXIS_V_data_1_state.read())))) {
            M_AXIS_V_data_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, M_AXIS_V_data_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, M_AXIS_V_data_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, M_AXIS_V_data_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, M_AXIS_V_data_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, M_AXIS_V_data_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, M_AXIS_V_data_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_data_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_data_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, M_AXIS_V_data_1_ack_out.read()))))) {
            M_AXIS_V_data_1_state = ap_const_lv2_3;
        } else {
            M_AXIS_V_data_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        M_AXIS_V_last_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, M_AXIS_V_last_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, M_AXIS_V_last_1_vld_out.read()))) {
            M_AXIS_V_last_1_sel_rd =  (sc_logic) (~M_AXIS_V_last_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        M_AXIS_V_last_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_last_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, M_AXIS_V_last_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, M_AXIS_V_last_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_last_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, M_AXIS_V_last_1_state.read())))) {
            M_AXIS_V_last_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, M_AXIS_V_last_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_last_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, M_AXIS_V_last_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_last_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, M_AXIS_V_last_1_state.read())))) {
            M_AXIS_V_last_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, M_AXIS_V_last_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, M_AXIS_V_last_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, M_AXIS_V_last_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, M_AXIS_V_last_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, M_AXIS_V_last_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, M_AXIS_V_last_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_last_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_last_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, M_AXIS_V_last_1_ack_out.read()))))) {
            M_AXIS_V_last_1_state = ap_const_lv2_3;
        } else {
            M_AXIS_V_last_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        S_AXIS_V_data_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, S_AXIS_V_data_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, S_AXIS_V_data_0_vld_out.read()))) {
            S_AXIS_V_data_0_sel_rd =  (sc_logic) (~S_AXIS_V_data_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        S_AXIS_V_data_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, S_AXIS_V_data_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, S_AXIS_V_data_0_ack_in.read()))) {
            S_AXIS_V_data_0_sel_wr =  (sc_logic) (~S_AXIS_V_data_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        S_AXIS_V_data_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_V_data_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, S_AXIS_V_data_0_ack_out.read()) && 
              esl_seteq<1,2,2>(S_AXIS_V_data_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_V_data_0_vld_in.read()) && 
              esl_seteq<1,2,2>(S_AXIS_V_data_0_state.read(), ap_const_lv2_2)))) {
            S_AXIS_V_data_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, S_AXIS_V_data_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_V_data_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(S_AXIS_V_data_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_V_data_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(S_AXIS_V_data_0_state.read(), ap_const_lv2_1)))) {
            S_AXIS_V_data_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, S_AXIS_V_data_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(S_AXIS_V_data_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, S_AXIS_V_data_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(S_AXIS_V_data_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(S_AXIS_V_data_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, S_AXIS_V_data_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_V_data_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_V_data_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, S_AXIS_V_data_0_ack_out.read()))))) {
            S_AXIS_V_data_0_state = ap_const_lv2_3;
        } else {
            S_AXIS_V_data_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        S_AXIS_V_last_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_V_last_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, S_AXIS_V_last_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, S_AXIS_V_last_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_V_last_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, S_AXIS_V_last_0_state.read())))) {
            S_AXIS_V_last_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, S_AXIS_V_last_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_V_last_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, S_AXIS_V_last_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_V_last_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, S_AXIS_V_last_0_state.read())))) {
            S_AXIS_V_last_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, S_AXIS_V_last_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, S_AXIS_V_last_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, S_AXIS_V_last_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, S_AXIS_V_last_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, S_AXIS_V_last_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, S_AXIS_V_last_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_V_last_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_V_last_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, S_AXIS_V_last_0_ack_out.read()))))) {
            S_AXIS_V_last_0_state = ap_const_lv2_3;
        } else {
            S_AXIS_V_last_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond7_fu_580_p2.read()))) {
        highest_pred_reg_368 = ap_const_lv15_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state29.read()))) {
        highest_pred_reg_368 = highest_pred_2_highe_fu_852_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_434_p2.read()))) {
        i_1_reg_278 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_521_p2.read()))) {
        i_1_reg_278 = i_6_reg_913.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()) && 
         !esl_seteq<1,1,1>(S_AXIS_V_data_0_vld_out.read(), ap_const_logic_0))) {
        i_2_reg_311 = i_7_reg_953.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_538_p2.read()) && 
                !(esl_seteq<1,1,1>(M_AXIS_V_data_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(M_AXIS_V_last_1_ack_in.read(), ap_const_logic_0)))) {
        i_2_reg_311 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_554_p2.read()))) {
        i_3_reg_322 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state20.read()))) {
        i_3_reg_322 = i_8_reg_966.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond7_fu_580_p2.read()))) {
        i_4_reg_357 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state29.read()))) {
        i_4_reg_357 = prediction_reg_1035.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_460_p2.read()))) {
        i_reg_256 = i_5_reg_887.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state1.read()))) {
        i_reg_256 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && 
         !esl_seteq<1,1,1>(S_AXIS_V_data_0_vld_out.read(), ap_const_logic_0))) {
        j_1_reg_289 = j_5_reg_932.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_495_p2.read()) && 
                !(!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_495_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_data_1_ack_in.read())))) {
        j_1_reg_289 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        j_2_reg_346 = j_6_reg_984.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond7_fu_580_p2.read()))) {
        j_2_reg_346 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read()))) {
        j_3_reg_393 = j_7_reg_1059.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_712_p2.read()) && 
                !(!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_712_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_data_1_ack_in.read())))) {
        j_3_reg_393 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
         !esl_seteq<1,1,1>(S_AXIS_V_data_0_vld_out.read(), ap_const_logic_0))) {
        j_reg_267 = j_4_reg_900.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_434_p2.read()))) {
        j_reg_267 = ap_const_lv3_0;
    }
    if (!esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_data_1_ack_in.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state30.read())) {
            k_reg_300 = k_1_reg_940.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read())) {
            k_reg_300 = ap_const_lv6_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        values_hidden_layer_1_reg_333 = tmp_5_fu_678_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond7_fu_580_p2.read()))) {
        values_hidden_layer_1_reg_333 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read()))) {
        values_output_layer_1_reg_380 = tmp_11_fu_806_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_712_p2.read()) && 
                !(!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_712_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_data_1_ack_in.read())))) {
        values_output_layer_1_reg_380 = ap_const_lv16_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, M_AXIS_V_data_1_load_A.read())) {
        M_AXIS_V_data_1_payload_A = M_AXIS_V_data_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, M_AXIS_V_data_1_load_B.read())) {
        M_AXIS_V_data_1_payload_B = M_AXIS_V_data_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, S_AXIS_V_data_0_load_A.read())) {
        S_AXIS_V_data_0_payload_A = S_AXIS_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, S_AXIS_V_data_0_load_B.read())) {
        S_AXIS_V_data_0_payload_B = S_AXIS_TDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        i_2_cast5_reg_945 = i_2_cast5_fu_550_p1.read();
        i_7_reg_953 = i_7_fu_560_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        i_3_cast4_cast_reg_958 = i_3_cast4_cast_fu_576_p1.read();
        i_8_reg_966 = i_8_fu_586_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read()) && !(!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_712_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_data_1_ack_in.read())))) {
        i_4_cast2_cast_reg_1027 = i_4_cast2_cast_fu_708_p1.read();
        prediction_reg_1035 = prediction_fu_718_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        i_5_reg_887 = i_5_fu_440_p2.read();
        tmp_1_reg_879 = tmp_1_fu_428_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()) && !(!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_495_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_data_1_ack_in.read())))) {
        i_6_reg_913 = i_6_fu_501_p2.read();
        tmp_7_reg_905 = tmp_7_fu_489_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_757_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_769_p2.read()))) {
        icmp1_reg_1073 = icmp1_fu_785_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond9_fu_629_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_641_p2.read()))) {
        icmp_reg_998 = icmp_fu_657_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        j_4_reg_900 = j_4_fu_466_p2.read();
        weights_IH_addr_reg_892 =  (sc_lv<7>) (tmp_21_cast_fu_455_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        j_5_reg_932 = j_5_fu_527_p2.read();
        weights_HO_addr_reg_924 =  (sc_lv<4>) (tmp_22_cast_fu_516_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()))) {
        j_6_reg_984 = j_6_fu_635_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read()))) {
        j_7_reg_1059 = j_7_fu_763_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()) && !(esl_seteq<1,1,1>(M_AXIS_V_data_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(M_AXIS_V_last_1_ack_in.read(), ap_const_logic_0)))) {
        k_1_reg_940 = k_1_fu_544_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()))) {
        test_data_load_reg_1002 = test_data_q0.read();
        weights_IH_load_reg_1007 = weights_IH_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read()))) {
        tmp_10_reg_1087 = tmp_2_i3_fu_872_p2.read().range(23, 8);
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond9_fu_629_p2.read()))) {
        tmp_2_reg_994 = tmp_2_fu_641_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()))) {
        tmp_4_reg_1012 = tmp_2_i_fu_865_p2.read().range(23, 8);
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_757_p2.read()))) {
        tmp_8_reg_1069 = tmp_8_fu_769_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state29.read()))) {
        tmp_data_fu_120 = prediction_write_out_fu_844_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()))) {
        values_hidden_layer_4_reg_1077 = values_hidden_layer_q0.read();
        weights_HO_load_reg_1082 = weights_HO_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond7_fu_580_p2.read()))) {
        values_hidden_layer_s_reg_971 =  (sc_lv<3>) (i_3_cast4_fu_571_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_712_p2.read()) && !(!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_712_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_data_1_ack_in.read())))) {
        values_output_layer_s_reg_1041 =  (sc_lv<2>) (i_4_cast2_fu_703_p1.read());
    }
}

void AXISTry::thread_M_AXIS_TDATA() {
    M_AXIS_TDATA = M_AXIS_V_data_1_data_out.read();
}

void AXISTry::thread_M_AXIS_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_495_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_712_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state30.read())))) {
        M_AXIS_TDATA_blk_n =  (sc_logic) (M_AXIS_V_data_1_state.read()[1]);
    } else {
        M_AXIS_TDATA_blk_n = ap_const_logic_1;
    }
}

void AXISTry::thread_M_AXIS_TLAST() {
    M_AXIS_TLAST = M_AXIS_V_last_1_data_out.read();
}

void AXISTry::thread_M_AXIS_TVALID() {
    M_AXIS_TVALID =  (sc_logic) (M_AXIS_V_last_1_state.read()[0]);
}

void AXISTry::thread_M_AXIS_V_data_1_ack_in() {
    M_AXIS_V_data_1_ack_in =  (sc_logic) (M_AXIS_V_data_1_state.read()[1]);
}

void AXISTry::thread_M_AXIS_V_data_1_ack_out() {
    M_AXIS_V_data_1_ack_out = M_AXIS_TREADY.read();
}

void AXISTry::thread_M_AXIS_V_data_1_data_in() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_712_p2.read()))) {
        M_AXIS_V_data_1_data_in = tmp_data_fu_120.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_495_p2.read()))) {
        M_AXIS_V_data_1_data_in = ap_const_lv32_3039;
    } else {
        M_AXIS_V_data_1_data_in = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void AXISTry::thread_M_AXIS_V_data_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, M_AXIS_V_data_1_sel.read())) {
        M_AXIS_V_data_1_data_out = M_AXIS_V_data_1_payload_B.read();
    } else {
        M_AXIS_V_data_1_data_out = M_AXIS_V_data_1_payload_A.read();
    }
}

void AXISTry::thread_M_AXIS_V_data_1_load_A() {
    M_AXIS_V_data_1_load_A = (M_AXIS_V_data_1_state_cmp_full.read() & ~M_AXIS_V_data_1_sel_wr.read());
}

void AXISTry::thread_M_AXIS_V_data_1_load_B() {
    M_AXIS_V_data_1_load_B = (M_AXIS_V_data_1_sel_wr.read() & M_AXIS_V_data_1_state_cmp_full.read());
}

void AXISTry::thread_M_AXIS_V_data_1_sel() {
    M_AXIS_V_data_1_sel = M_AXIS_V_data_1_sel_rd.read();
}

void AXISTry::thread_M_AXIS_V_data_1_state_cmp_full() {
    M_AXIS_V_data_1_state_cmp_full =  (sc_logic) ((!M_AXIS_V_data_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(M_AXIS_V_data_1_state.read() != ap_const_lv2_1))[0];
}

void AXISTry::thread_M_AXIS_V_data_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_712_p2.read()) && 
          !(!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_712_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_data_1_ack_in.read()))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_495_p2.read()) && 
          !(!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_495_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_data_1_ack_in.read()))))) {
        M_AXIS_V_data_1_vld_in = ap_const_logic_1;
    } else {
        M_AXIS_V_data_1_vld_in = ap_const_logic_0;
    }
}

void AXISTry::thread_M_AXIS_V_data_1_vld_out() {
    M_AXIS_V_data_1_vld_out =  (sc_logic) (M_AXIS_V_data_1_state.read()[0]);
}

void AXISTry::thread_M_AXIS_V_last_1_ack_in() {
    M_AXIS_V_last_1_ack_in =  (sc_logic) (M_AXIS_V_last_1_state.read()[1]);
}

void AXISTry::thread_M_AXIS_V_last_1_ack_out() {
    M_AXIS_V_last_1_ack_out = M_AXIS_TREADY.read();
}

void AXISTry::thread_M_AXIS_V_last_1_data_out() {
    M_AXIS_V_last_1_data_out =  (sc_logic) (ap_const_lv1_1[0]);
}

void AXISTry::thread_M_AXIS_V_last_1_sel() {
    M_AXIS_V_last_1_sel = M_AXIS_V_last_1_sel_rd.read();
}

void AXISTry::thread_M_AXIS_V_last_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_712_p2.read()) && 
          !(!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_712_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_data_1_ack_in.read()))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_495_p2.read()) && 
          !(!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_495_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_data_1_ack_in.read()))))) {
        M_AXIS_V_last_1_vld_in = ap_const_logic_1;
    } else {
        M_AXIS_V_last_1_vld_in = ap_const_logic_0;
    }
}

void AXISTry::thread_M_AXIS_V_last_1_vld_out() {
    M_AXIS_V_last_1_vld_out =  (sc_logic) (M_AXIS_V_last_1_state.read()[0]);
}

void AXISTry::thread_S_AXIS_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read())))) {
        S_AXIS_TDATA_blk_n =  (sc_logic) (S_AXIS_V_data_0_state.read()[0]);
    } else {
        S_AXIS_TDATA_blk_n = ap_const_logic_1;
    }
}

void AXISTry::thread_S_AXIS_TREADY() {
    S_AXIS_TREADY =  (sc_logic) (S_AXIS_V_last_0_state.read()[1]);
}

void AXISTry::thread_S_AXIS_V_data_0_ack_in() {
    S_AXIS_V_data_0_ack_in =  (sc_logic) (S_AXIS_V_data_0_state.read()[1]);
}

void AXISTry::thread_S_AXIS_V_data_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
          !esl_seteq<1,1,1>(S_AXIS_V_data_0_vld_out.read(), ap_const_logic_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && 
          !esl_seteq<1,1,1>(S_AXIS_V_data_0_vld_out.read(), ap_const_logic_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()) && 
          !esl_seteq<1,1,1>(S_AXIS_V_data_0_vld_out.read(), ap_const_logic_0)))) {
        S_AXIS_V_data_0_ack_out = ap_const_logic_1;
    } else {
        S_AXIS_V_data_0_ack_out = ap_const_logic_0;
    }
}

void AXISTry::thread_S_AXIS_V_data_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, S_AXIS_V_data_0_sel.read())) {
        S_AXIS_V_data_0_data_out = S_AXIS_V_data_0_payload_B.read();
    } else {
        S_AXIS_V_data_0_data_out = S_AXIS_V_data_0_payload_A.read();
    }
}

void AXISTry::thread_S_AXIS_V_data_0_load_A() {
    S_AXIS_V_data_0_load_A = (S_AXIS_V_data_0_state_cmp_full.read() & ~S_AXIS_V_data_0_sel_wr.read());
}

void AXISTry::thread_S_AXIS_V_data_0_load_B() {
    S_AXIS_V_data_0_load_B = (S_AXIS_V_data_0_sel_wr.read() & S_AXIS_V_data_0_state_cmp_full.read());
}

void AXISTry::thread_S_AXIS_V_data_0_sel() {
    S_AXIS_V_data_0_sel = S_AXIS_V_data_0_sel_rd.read();
}

void AXISTry::thread_S_AXIS_V_data_0_state_cmp_full() {
    S_AXIS_V_data_0_state_cmp_full =  (sc_logic) ((!S_AXIS_V_data_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(S_AXIS_V_data_0_state.read() != ap_const_lv2_1))[0];
}

void AXISTry::thread_S_AXIS_V_data_0_vld_in() {
    S_AXIS_V_data_0_vld_in = S_AXIS_TVALID.read();
}

void AXISTry::thread_S_AXIS_V_data_0_vld_out() {
    S_AXIS_V_data_0_vld_out =  (sc_logic) (S_AXIS_V_data_0_state.read()[0]);
}

void AXISTry::thread_S_AXIS_V_last_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
          !esl_seteq<1,1,1>(S_AXIS_V_data_0_vld_out.read(), ap_const_logic_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && 
          !esl_seteq<1,1,1>(S_AXIS_V_data_0_vld_out.read(), ap_const_logic_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()) && 
          !esl_seteq<1,1,1>(S_AXIS_V_data_0_vld_out.read(), ap_const_logic_0)))) {
        S_AXIS_V_last_0_ack_out = ap_const_logic_1;
    } else {
        S_AXIS_V_last_0_ack_out = ap_const_logic_0;
    }
}

void AXISTry::thread_S_AXIS_V_last_0_vld_in() {
    S_AXIS_V_last_0_vld_in = S_AXIS_TVALID.read();
}

void AXISTry::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void AXISTry::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read().range(9, 9);
}

void AXISTry::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read().range(10, 10);
}

void AXISTry::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read().range(11, 11);
}

void AXISTry::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read().range(12, 12);
}

void AXISTry::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read().range(13, 13);
}

void AXISTry::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read().range(14, 14);
}

void AXISTry::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read().range(15, 15);
}

void AXISTry::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read().range(16, 16);
}

void AXISTry::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read().range(17, 17);
}

void AXISTry::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read().range(18, 18);
}

void AXISTry::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void AXISTry::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read().range(19, 19);
}

void AXISTry::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read().range(20, 20);
}

void AXISTry::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read().range(21, 21);
}

void AXISTry::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read().range(22, 22);
}

void AXISTry::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read().range(23, 23);
}

void AXISTry::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read().range(24, 24);
}

void AXISTry::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read().range(25, 25);
}

void AXISTry::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read().range(26, 26);
}

void AXISTry::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read().range(27, 27);
}

void AXISTry::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read().range(28, 28);
}

void AXISTry::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read().range(2, 2);
}

void AXISTry::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read().range(29, 29);
}

void AXISTry::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(3, 3);
}

void AXISTry::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read().range(4, 4);
}

void AXISTry::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read().range(5, 5);
}

void AXISTry::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read().range(6, 6);
}

void AXISTry::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read().range(7, 7);
}

void AXISTry::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read().range(8, 8);
}

void AXISTry::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void AXISTry::thread_exitcond1_fu_434_p2() {
    exitcond1_fu_434_p2 = (!i_reg_256.read().is_01() || !ap_const_lv4_D.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_256.read() == ap_const_lv4_D);
}

void AXISTry::thread_exitcond2_fu_495_p2() {
    exitcond2_fu_495_p2 = (!i_1_reg_278.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_278.read() == ap_const_lv3_5);
}

void AXISTry::thread_exitcond3_fu_460_p2() {
    exitcond3_fu_460_p2 = (!j_reg_267.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_267.read() == ap_const_lv3_5);
}

void AXISTry::thread_exitcond4_fu_538_p2() {
    exitcond4_fu_538_p2 = (!k_reg_300.read().is_01() || !ap_const_lv6_24.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_300.read() == ap_const_lv6_24);
}

void AXISTry::thread_exitcond5_fu_521_p2() {
    exitcond5_fu_521_p2 = (!j_1_reg_289.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_289.read() == ap_const_lv2_3);
}

void AXISTry::thread_exitcond6_fu_554_p2() {
    exitcond6_fu_554_p2 = (!i_2_reg_311.read().is_01() || !ap_const_lv4_D.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_311.read() == ap_const_lv4_D);
}

void AXISTry::thread_exitcond7_fu_580_p2() {
    exitcond7_fu_580_p2 = (!i_3_reg_322.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(i_3_reg_322.read() == ap_const_lv3_5);
}

void AXISTry::thread_exitcond8_fu_712_p2() {
    exitcond8_fu_712_p2 = (!i_4_reg_357.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i_4_reg_357.read() == ap_const_lv2_3);
}

void AXISTry::thread_exitcond9_fu_629_p2() {
    exitcond9_fu_629_p2 = (!j_2_reg_346.read().is_01() || !ap_const_lv4_D.is_01())? sc_lv<1>(): sc_lv<1>(j_2_reg_346.read() == ap_const_lv4_D);
}

void AXISTry::thread_exitcond_fu_757_p2() {
    exitcond_fu_757_p2 = (!j_3_reg_393.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(j_3_reg_393.read() == ap_const_lv3_5);
}

void AXISTry::thread_highest_pred_1_cast6_fu_831_p1() {
    highest_pred_1_cast6_fu_831_p1 = esl_zext<15,8>(sigmoid_arr_q0.read());
}

void AXISTry::thread_highest_pred_1_fu_826_p1() {
    highest_pred_1_fu_826_p1 = esl_zext<16,8>(sigmoid_arr_q0.read());
}

void AXISTry::thread_highest_pred_2_highe_fu_852_p3() {
    highest_pred_2_highe_fu_852_p3 = (!tmp_16_fu_835_p2.read()[0].is_01())? sc_lv<15>(): ((tmp_16_fu_835_p2.read()[0].to_bool())? highest_pred_1_cast6_fu_831_p1.read(): highest_pred_reg_368.read());
}

void AXISTry::thread_i_1_cast7_cast_fu_477_p1() {
    i_1_cast7_cast_fu_477_p1 = esl_zext<5,3>(i_1_reg_278.read());
}

void AXISTry::thread_i_2_cast5_fu_550_p1() {
    i_2_cast5_fu_550_p1 = esl_zext<32,4>(i_2_reg_311.read());
}

void AXISTry::thread_i_3_cast4_cast_fu_576_p1() {
    i_3_cast4_cast_fu_576_p1 = esl_zext<7,3>(i_3_reg_322.read());
}

void AXISTry::thread_i_3_cast4_fu_571_p1() {
    i_3_cast4_fu_571_p1 = esl_zext<32,3>(i_3_reg_322.read());
}

void AXISTry::thread_i_4_cast2_cast_fu_708_p1() {
    i_4_cast2_cast_fu_708_p1 = esl_zext<5,2>(i_4_reg_357.read());
}

void AXISTry::thread_i_4_cast2_fu_703_p1() {
    i_4_cast2_fu_703_p1 = esl_zext<32,2>(i_4_reg_357.read());
}

void AXISTry::thread_i_5_fu_440_p2() {
    i_5_fu_440_p2 = (!i_reg_256.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_256.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void AXISTry::thread_i_6_fu_501_p2() {
    i_6_fu_501_p2 = (!i_1_reg_278.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_1_reg_278.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void AXISTry::thread_i_7_fu_560_p2() {
    i_7_fu_560_p2 = (!i_2_reg_311.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_2_reg_311.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void AXISTry::thread_i_8_fu_586_p2() {
    i_8_fu_586_p2 = (!i_3_reg_322.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_3_reg_322.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void AXISTry::thread_i_cast9_cast_fu_412_p1() {
    i_cast9_cast_fu_412_p1 = esl_zext<7,4>(i_reg_256.read());
}

void AXISTry::thread_icmp1_fu_785_p2() {
    icmp1_fu_785_p2 = (!tmp_28_fu_775_p4.read().is_01() || !ap_const_lv6_0.is_01())? sc_lv<1>(): (sc_bigint<6>(tmp_28_fu_775_p4.read()) > sc_bigint<6>(ap_const_lv6_0));
}

void AXISTry::thread_icmp_fu_657_p2() {
    icmp_fu_657_p2 = (!tmp_27_fu_647_p4.read().is_01() || !ap_const_lv6_0.is_01())? sc_lv<1>(): (sc_bigint<6>(tmp_27_fu_647_p4.read()) > sc_bigint<6>(ap_const_lv6_0));
}

void AXISTry::thread_j_1_cast6_cast_fu_507_p1() {
    j_1_cast6_cast_fu_507_p1 = esl_zext<5,2>(j_1_reg_289.read());
}

void AXISTry::thread_j_2_cast3_cast_fu_597_p1() {
    j_2_cast3_cast_fu_597_p1 = esl_zext<7,4>(j_2_reg_346.read());
}

void AXISTry::thread_j_2_cast3_fu_592_p1() {
    j_2_cast3_fu_592_p1 = esl_zext<32,4>(j_2_reg_346.read());
}

void AXISTry::thread_j_3_cast1_cast_fu_729_p1() {
    j_3_cast1_cast_fu_729_p1 = esl_zext<5,3>(j_3_reg_393.read());
}

void AXISTry::thread_j_3_cast1_fu_724_p1() {
    j_3_cast1_fu_724_p1 = esl_zext<32,3>(j_3_reg_393.read());
}

void AXISTry::thread_j_4_fu_466_p2() {
    j_4_fu_466_p2 = (!j_reg_267.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_reg_267.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void AXISTry::thread_j_5_fu_527_p2() {
    j_5_fu_527_p2 = (!j_1_reg_289.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j_1_reg_289.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void AXISTry::thread_j_6_fu_635_p2() {
    j_6_fu_635_p2 = (!j_2_reg_346.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_2_reg_346.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void AXISTry::thread_j_7_fu_763_p2() {
    j_7_fu_763_p2 = (!j_3_reg_393.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_3_reg_393.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void AXISTry::thread_j_cast8_cast_fu_446_p1() {
    j_cast8_cast_fu_446_p1 = esl_zext<7,3>(j_reg_267.read());
}

void AXISTry::thread_k_1_fu_544_p2() {
    k_1_fu_544_p2 = (!k_reg_300.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(k_reg_300.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void AXISTry::thread_p_shl2_cast_fu_609_p1() {
    p_shl2_cast_fu_609_p1 = esl_zext<7,6>(tmp_21_fu_601_p3.read());
}

void AXISTry::thread_p_shl_cast_fu_424_p1() {
    p_shl_cast_fu_424_p1 = esl_zext<7,6>(tmp_s_fu_416_p3.read());
}

void AXISTry::thread_prediction_cast_fu_841_p1() {
    prediction_cast_fu_841_p1 = esl_zext<32,2>(prediction_reg_1035.read());
}

void AXISTry::thread_prediction_fu_718_p2() {
    prediction_fu_718_p2 = (!i_4_reg_357.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_4_reg_357.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void AXISTry::thread_prediction_write_out_fu_844_p3() {
    prediction_write_out_fu_844_p3 = (!tmp_16_fu_835_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_16_fu_835_p2.read()[0].to_bool())? prediction_cast_fu_841_p1.read(): tmp_data_fu_120.read());
}

void AXISTry::thread_sigmoid_arr_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state28.read()))) {
        sigmoid_arr_address0 =  (sc_lv<11>) (tmp_17_cast_fu_821_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read()))) {
        sigmoid_arr_address0 =  (sc_lv<11>) (tmp_14_cast_fu_693_p1.read());
    } else {
        sigmoid_arr_address0 =  (sc_lv<11>) ("XXXXXXXXXXX");
    }
}

void AXISTry::thread_sigmoid_arr_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state28.read())))) {
        sigmoid_arr_ce0 = ap_const_logic_1;
    } else {
        sigmoid_arr_ce0 = ap_const_logic_0;
    }
}

void AXISTry::thread_test_data_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()))) {
        test_data_address0 =  (sc_lv<4>) (j_2_cast3_fu_592_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()))) {
        test_data_address0 =  (sc_lv<4>) (i_2_cast5_reg_945.read());
    } else {
        test_data_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void AXISTry::thread_test_data_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()) && 
          !esl_seteq<1,1,1>(S_AXIS_V_data_0_vld_out.read(), ap_const_logic_0)))) {
        test_data_ce0 = ap_const_logic_1;
    } else {
        test_data_ce0 = ap_const_logic_0;
    }
}

void AXISTry::thread_test_data_d0() {
    test_data_d0 = S_AXIS_V_data_0_data_out.read().range(16-1, 0);
}

void AXISTry::thread_test_data_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()) && 
          !esl_seteq<1,1,1>(S_AXIS_V_data_0_vld_out.read(), ap_const_logic_0)))) {
        test_data_we0 = ap_const_logic_1;
    } else {
        test_data_we0 = ap_const_logic_0;
    }
}

void AXISTry::thread_tmp_11_fu_806_p2() {
    tmp_11_fu_806_p2 = (!values_output_layer_1_reg_380.read().is_01() || !tmp_10_reg_1087.read().is_01())? sc_lv<16>(): (sc_biguint<16>(values_output_layer_1_reg_380.read()) + sc_biguint<16>(tmp_10_reg_1087.read()));
}

void AXISTry::thread_tmp_12_fu_450_p2() {
    tmp_12_fu_450_p2 = (!tmp_1_reg_879.read().is_01() || !j_cast8_cast_fu_446_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_1_reg_879.read()) + sc_biguint<7>(j_cast8_cast_fu_446_p1.read()));
}

void AXISTry::thread_tmp_13_fu_687_p2() {
    tmp_13_fu_687_p2 = (!ap_const_lv13_400.is_01() || !tmp_29_fu_683_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_400) + sc_biguint<13>(tmp_29_fu_683_p1.read()));
}

void AXISTry::thread_tmp_14_cast_fu_693_p1() {
    tmp_14_cast_fu_693_p1 = esl_sext<32,13>(tmp_13_fu_687_p2.read());
}

void AXISTry::thread_tmp_14_fu_698_p1() {
    tmp_14_fu_698_p1 = esl_zext<16,8>(sigmoid_arr_q0.read());
}

void AXISTry::thread_tmp_15_fu_815_p2() {
    tmp_15_fu_815_p2 = (!ap_const_lv13_400.is_01() || !tmp_30_fu_811_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_400) + sc_biguint<13>(tmp_30_fu_811_p1.read()));
}

void AXISTry::thread_tmp_16_fu_835_p2() {
    tmp_16_fu_835_p2 = (!highest_pred_1_cast6_fu_831_p1.read().is_01() || !highest_pred_reg_368.read().is_01())? sc_lv<1>(): (sc_biguint<15>(highest_pred_1_cast6_fu_831_p1.read()) > sc_biguint<15>(highest_pred_reg_368.read()));
}

void AXISTry::thread_tmp_17_cast_fu_821_p1() {
    tmp_17_cast_fu_821_p1 = esl_sext<32,13>(tmp_15_fu_815_p2.read());
}

void AXISTry::thread_tmp_18_fu_511_p2() {
    tmp_18_fu_511_p2 = (!tmp_7_reg_905.read().is_01() || !j_1_cast6_cast_fu_507_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_7_reg_905.read()) + sc_biguint<5>(j_1_cast6_cast_fu_507_p1.read()));
}

void AXISTry::thread_tmp_1_fu_428_p2() {
    tmp_1_fu_428_p2 = (!i_cast9_cast_fu_412_p1.read().is_01() || !p_shl_cast_fu_424_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(i_cast9_cast_fu_412_p1.read()) + sc_biguint<7>(p_shl_cast_fu_424_p1.read()));
}

void AXISTry::thread_tmp_21_cast_fu_455_p1() {
    tmp_21_cast_fu_455_p1 = esl_zext<32,7>(tmp_12_fu_450_p2.read());
}

void AXISTry::thread_tmp_21_fu_601_p3() {
    tmp_21_fu_601_p3 = esl_concat<4,2>(j_2_reg_346.read(), ap_const_lv2_0);
}

void AXISTry::thread_tmp_22_cast_fu_516_p1() {
    tmp_22_cast_fu_516_p1 = esl_sext<32,5>(tmp_18_fu_511_p2.read());
}

void AXISTry::thread_tmp_22_fu_613_p2() {
    tmp_22_fu_613_p2 = (!j_2_cast3_cast_fu_597_p1.read().is_01() || !p_shl2_cast_fu_609_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(j_2_cast3_cast_fu_597_p1.read()) + sc_biguint<7>(p_shl2_cast_fu_609_p1.read()));
}

void AXISTry::thread_tmp_23_fu_619_p2() {
    tmp_23_fu_619_p2 = (!tmp_22_fu_613_p2.read().is_01() || !i_3_cast4_cast_reg_958.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_22_fu_613_p2.read()) + sc_biguint<7>(i_3_cast4_cast_reg_958.read()));
}

void AXISTry::thread_tmp_24_fu_733_p3() {
    tmp_24_fu_733_p3 = esl_concat<3,2>(j_3_reg_393.read(), ap_const_lv2_0);
}

void AXISTry::thread_tmp_25_cast_fu_624_p1() {
    tmp_25_cast_fu_624_p1 = esl_zext<32,7>(tmp_23_fu_619_p2.read());
}

void AXISTry::thread_tmp_25_fu_741_p2() {
    tmp_25_fu_741_p2 = (!tmp_24_fu_733_p3.read().is_01() || !j_3_cast1_cast_fu_729_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_24_fu_733_p3.read()) - sc_biguint<5>(j_3_cast1_cast_fu_729_p1.read()));
}

void AXISTry::thread_tmp_26_fu_747_p2() {
    tmp_26_fu_747_p2 = (!tmp_25_fu_741_p2.read().is_01() || !i_4_cast2_cast_reg_1027.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_25_fu_741_p2.read()) + sc_biguint<5>(i_4_cast2_cast_reg_1027.read()));
}

void AXISTry::thread_tmp_27_fu_647_p4() {
    tmp_27_fu_647_p4 = values_hidden_layer_1_reg_333.read().range(15, 10);
}

void AXISTry::thread_tmp_28_cast_fu_752_p1() {
    tmp_28_cast_fu_752_p1 = esl_sext<32,5>(tmp_26_fu_747_p2.read());
}

void AXISTry::thread_tmp_28_fu_775_p4() {
    tmp_28_fu_775_p4 = values_output_layer_1_reg_380.read().range(15, 10);
}

void AXISTry::thread_tmp_29_fu_683_p1() {
    tmp_29_fu_683_p1 = values_hidden_layer_q0.read().range(13-1, 0);
}

void AXISTry::thread_tmp_2_fu_641_p2() {
    tmp_2_fu_641_p2 = (!values_hidden_layer_1_reg_333.read().is_01() || !ap_const_lv16_FC00.is_01())? sc_lv<1>(): (sc_bigint<16>(values_hidden_layer_1_reg_333.read()) < sc_bigint<16>(ap_const_lv16_FC00));
}

void AXISTry::thread_tmp_30_fu_811_p1() {
    tmp_30_fu_811_p1 = values_output_layer_q0.read().range(13-1, 0);
}

void AXISTry::thread_tmp_5_fu_678_p2() {
    tmp_5_fu_678_p2 = (!values_hidden_layer_1_reg_333.read().is_01() || !tmp_4_reg_1012.read().is_01())? sc_lv<16>(): (sc_biguint<16>(values_hidden_layer_1_reg_333.read()) + sc_biguint<16>(tmp_4_reg_1012.read()));
}

void AXISTry::thread_tmp_6_fu_481_p3() {
    tmp_6_fu_481_p3 = esl_concat<3,2>(i_1_reg_278.read(), ap_const_lv2_0);
}

void AXISTry::thread_tmp_7_fu_489_p2() {
    tmp_7_fu_489_p2 = (!tmp_6_fu_481_p3.read().is_01() || !i_1_cast7_cast_fu_477_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_6_fu_481_p3.read()) - sc_biguint<5>(i_1_cast7_cast_fu_477_p1.read()));
}

void AXISTry::thread_tmp_8_fu_769_p2() {
    tmp_8_fu_769_p2 = (!values_output_layer_1_reg_380.read().is_01() || !ap_const_lv16_FC00.is_01())? sc_lv<1>(): (sc_bigint<16>(values_output_layer_1_reg_380.read()) < sc_bigint<16>(ap_const_lv16_FC00));
}

void AXISTry::thread_tmp_s_fu_416_p3() {
    tmp_s_fu_416_p3 = esl_concat<4,2>(i_reg_256.read(), ap_const_lv2_0);
}

void AXISTry::thread_values_hidden_layer_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read()))) {
        values_hidden_layer_address0 =  (sc_lv<3>) (j_3_cast1_fu_724_p1.read());
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state20.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_994.read()) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_998.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read()) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_994.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read())))) {
        values_hidden_layer_address0 = values_hidden_layer_s_reg_971.read();
    } else {
        values_hidden_layer_address0 =  (sc_lv<3>) ("XXX");
    }
}

void AXISTry::thread_values_hidden_layer_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state20.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_994.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_998.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_994.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read())))) {
        values_hidden_layer_ce0 = ap_const_logic_1;
    } else {
        values_hidden_layer_ce0 = ap_const_logic_0;
    }
}

void AXISTry::thread_values_hidden_layer_d0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state20.read()))) {
        values_hidden_layer_d0 = tmp_14_fu_698_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_994.read()))) {
        values_hidden_layer_d0 = ap_const_lv16_FC00;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_994.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_998.read()))) {
        values_hidden_layer_d0 = ap_const_lv16_3FF;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()))) {
        values_hidden_layer_d0 = values_hidden_layer_1_reg_333.read();
    } else {
        values_hidden_layer_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void AXISTry::thread_values_hidden_layer_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state20.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_994.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_998.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_994.read())))) {
        values_hidden_layer_we0 = ap_const_logic_1;
    } else {
        values_hidden_layer_we0 = ap_const_logic_0;
    }
}

void AXISTry::thread_values_output_layer_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state29.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_1069.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, icmp1_reg_1073.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_1069.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state27.read())))) {
        values_output_layer_ce0 = ap_const_logic_1;
    } else {
        values_output_layer_ce0 = ap_const_logic_0;
    }
}

void AXISTry::thread_values_output_layer_d0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state29.read()))) {
        values_output_layer_d0 = highest_pred_1_fu_826_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_1069.read()))) {
        values_output_layer_d0 = ap_const_lv16_FC00;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_1069.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, icmp1_reg_1073.read()))) {
        values_output_layer_d0 = ap_const_lv16_3FF;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read()))) {
        values_output_layer_d0 = values_output_layer_1_reg_380.read();
    } else {
        values_output_layer_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void AXISTry::thread_values_output_layer_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state29.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_1069.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, icmp1_reg_1073.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_1069.read())))) {
        values_output_layer_we0 = ap_const_logic_1;
    } else {
        values_output_layer_we0 = ap_const_logic_0;
    }
}

void AXISTry::thread_weights_HO_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read()))) {
        weights_HO_address0 =  (sc_lv<4>) (tmp_28_cast_fu_752_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        weights_HO_address0 = weights_HO_addr_reg_924.read();
    } else {
        weights_HO_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void AXISTry::thread_weights_HO_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && 
          !esl_seteq<1,1,1>(S_AXIS_V_data_0_vld_out.read(), ap_const_logic_0)))) {
        weights_HO_ce0 = ap_const_logic_1;
    } else {
        weights_HO_ce0 = ap_const_logic_0;
    }
}

void AXISTry::thread_weights_HO_d0() {
    weights_HO_d0 = S_AXIS_V_data_0_data_out.read().range(16-1, 0);
}

void AXISTry::thread_weights_HO_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && 
          !esl_seteq<1,1,1>(S_AXIS_V_data_0_vld_out.read(), ap_const_logic_0)))) {
        weights_HO_we0 = ap_const_logic_1;
    } else {
        weights_HO_we0 = ap_const_logic_0;
    }
}

void AXISTry::thread_weights_IH_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()))) {
        weights_IH_address0 =  (sc_lv<7>) (tmp_25_cast_fu_624_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        weights_IH_address0 = weights_IH_addr_reg_892.read();
    } else {
        weights_IH_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void AXISTry::thread_weights_IH_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
          !esl_seteq<1,1,1>(S_AXIS_V_data_0_vld_out.read(), ap_const_logic_0)))) {
        weights_IH_ce0 = ap_const_logic_1;
    } else {
        weights_IH_ce0 = ap_const_logic_0;
    }
}

void AXISTry::thread_weights_IH_d0() {
    weights_IH_d0 = S_AXIS_V_data_0_data_out.read().range(16-1, 0);
}

void AXISTry::thread_weights_IH_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
          !esl_seteq<1,1,1>(S_AXIS_V_data_0_vld_out.read(), ap_const_logic_0)))) {
        weights_IH_we0 = ap_const_logic_1;
    } else {
        weights_IH_we0 = ap_const_logic_0;
    }
}

void AXISTry::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_434_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_460_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if (!esl_seteq<1,1,1>(S_AXIS_V_data_0_vld_out.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_495_p2.read()) && !(!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_495_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_data_1_ack_in.read())))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else if ((!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_495_p2.read()) && !(!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_495_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_data_1_ack_in.read())))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_521_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            if (!esl_seteq<1,1,1>(S_AXIS_V_data_0_vld_out.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_data_1_ack_in.read())) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            if ((!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_538_p2.read()) && !(esl_seteq<1,1,1>(M_AXIS_V_data_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(M_AXIS_V_last_1_ack_in.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_538_p2.read()) && !(esl_seteq<1,1,1>(M_AXIS_V_data_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(M_AXIS_V_last_1_ack_in.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_554_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            if (!esl_seteq<1,1,1>(S_AXIS_V_data_0_vld_out.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 2048 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond7_fu_580_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond9_fu_629_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 1048576 : 
            if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_712_p2.read()) && !(!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_712_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_data_1_ack_in.read())))) {
                ap_NS_fsm = ap_ST_fsm_state22;
            } else if ((!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_712_p2.read()) && !(!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_712_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_data_1_ack_in.read())))) {
                ap_NS_fsm = ap_ST_fsm_state30;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        case 2097152 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_757_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state26;
            } else {
                ap_NS_fsm = ap_ST_fsm_state23;
            }
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 536870912 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_V_data_1_ack_in.read())) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state30;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<30>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void AXISTry::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"S_AXIS_TDATA\" :  \"" << S_AXIS_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"S_AXIS_TVALID\" :  \"" << S_AXIS_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"S_AXIS_TREADY\" :  \"" << S_AXIS_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"S_AXIS_TLAST\" :  \"" << S_AXIS_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_AXIS_TDATA\" :  \"" << M_AXIS_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_AXIS_TVALID\" :  \"" << M_AXIS_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"M_AXIS_TREADY\" :  \"" << M_AXIS_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_AXIS_TLAST\" :  \"" << M_AXIS_TLAST.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

