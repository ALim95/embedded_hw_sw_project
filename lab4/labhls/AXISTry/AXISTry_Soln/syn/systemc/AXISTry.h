// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _AXISTry_HH_
#define _AXISTry_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "AXISTry_mul_32ns_bkb.h"

namespace ap_rtl {

struct AXISTry : public sc_module {
    // Port declarations 10
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > S_AXIS_TDATA;
    sc_in< sc_logic > S_AXIS_TVALID;
    sc_out< sc_logic > S_AXIS_TREADY;
    sc_in< sc_logic > S_AXIS_TLAST;
    sc_out< sc_lv<32> > M_AXIS_TDATA;
    sc_out< sc_logic > M_AXIS_TVALID;
    sc_in< sc_logic > M_AXIS_TREADY;
    sc_out< sc_logic > M_AXIS_TLAST;


    // Module declarations
    AXISTry(sc_module_name name);
    SC_HAS_PROCESS(AXISTry);

    ~AXISTry();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    AXISTry_mul_32ns_bkb<1,6,32,64,64>* AXISTry_mul_32ns_bkb_U0;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<32> > S_AXIS_V_data_0_data_out;
    sc_signal< sc_logic > S_AXIS_V_data_0_vld_in;
    sc_signal< sc_logic > S_AXIS_V_data_0_vld_out;
    sc_signal< sc_logic > S_AXIS_V_data_0_ack_in;
    sc_signal< sc_logic > S_AXIS_V_data_0_ack_out;
    sc_signal< sc_lv<32> > S_AXIS_V_data_0_payload_A;
    sc_signal< sc_lv<32> > S_AXIS_V_data_0_payload_B;
    sc_signal< sc_logic > S_AXIS_V_data_0_sel_rd;
    sc_signal< sc_logic > S_AXIS_V_data_0_sel_wr;
    sc_signal< sc_logic > S_AXIS_V_data_0_sel;
    sc_signal< sc_logic > S_AXIS_V_data_0_load_A;
    sc_signal< sc_logic > S_AXIS_V_data_0_load_B;
    sc_signal< sc_lv<2> > S_AXIS_V_data_0_state;
    sc_signal< sc_logic > S_AXIS_V_data_0_state_cmp_full;
    sc_signal< sc_logic > S_AXIS_V_last_0_vld_in;
    sc_signal< sc_logic > S_AXIS_V_last_0_ack_out;
    sc_signal< sc_lv<2> > S_AXIS_V_last_0_state;
    sc_signal< sc_lv<32> > M_AXIS_V_data_1_data_out;
    sc_signal< sc_logic > M_AXIS_V_data_1_vld_in;
    sc_signal< sc_logic > M_AXIS_V_data_1_vld_out;
    sc_signal< sc_logic > M_AXIS_V_data_1_ack_in;
    sc_signal< sc_logic > M_AXIS_V_data_1_ack_out;
    sc_signal< sc_lv<32> > M_AXIS_V_data_1_payload_A;
    sc_signal< sc_lv<32> > M_AXIS_V_data_1_payload_B;
    sc_signal< sc_logic > M_AXIS_V_data_1_sel_rd;
    sc_signal< sc_logic > M_AXIS_V_data_1_sel_wr;
    sc_signal< sc_logic > M_AXIS_V_data_1_sel;
    sc_signal< sc_logic > M_AXIS_V_data_1_load_A;
    sc_signal< sc_logic > M_AXIS_V_data_1_load_B;
    sc_signal< sc_lv<2> > M_AXIS_V_data_1_state;
    sc_signal< sc_logic > M_AXIS_V_data_1_state_cmp_full;
    sc_signal< sc_logic > M_AXIS_V_last_1_data_out;
    sc_signal< sc_logic > M_AXIS_V_last_1_vld_in;
    sc_signal< sc_logic > M_AXIS_V_last_1_vld_out;
    sc_signal< sc_logic > M_AXIS_V_last_1_ack_in;
    sc_signal< sc_logic > M_AXIS_V_last_1_ack_out;
    sc_signal< sc_logic > M_AXIS_V_last_1_payload_A;
    sc_signal< sc_logic > M_AXIS_V_last_1_payload_B;
    sc_signal< sc_logic > M_AXIS_V_last_1_sel_rd;
    sc_signal< sc_logic > M_AXIS_V_last_1_sel_wr;
    sc_signal< sc_logic > M_AXIS_V_last_1_sel;
    sc_signal< sc_logic > M_AXIS_V_last_1_load_A;
    sc_signal< sc_logic > M_AXIS_V_last_1_load_B;
    sc_signal< sc_lv<2> > M_AXIS_V_last_1_state;
    sc_signal< sc_logic > M_AXIS_V_last_1_state_cmp_full;
    sc_signal< sc_logic > S_AXIS_TDATA_blk_n;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state3;
    sc_signal< sc_logic > M_AXIS_TDATA_blk_n;
    sc_signal< sc_lv<1> > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > exitcond_fu_134_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state10;
    sc_signal< sc_lv<2> > i_2_fu_114_p2;
    sc_signal< sc_lv<2> > i_2_reg_185;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > grp_fu_128_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state8;
    sc_signal< sc_lv<2> > i_3_fu_140_p2;
    sc_signal< sc_lv<2> > i_3_reg_203;
    sc_signal< sc_lv<32> > write_output_data_fu_166_p3;
    sc_signal< sc_lv<1> > tmp_last_fu_175_p2;
    sc_signal< sc_lv<2> > i_reg_74;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<64> > product_reg_85;
    sc_signal< sc_lv<2> > i_1_reg_97;
    sc_signal< sc_lv<1> > exitcond3_fu_108_p2;
    sc_signal< sc_lv<32> > grp_fu_128_p0;
    sc_signal< sc_lv<1> > tmp_5_fu_146_p2;
    sc_signal< sc_lv<32> > tmp_fu_152_p4;
    sc_signal< sc_lv<32> > tmp_1_fu_162_p1;
    sc_signal< sc_logic > grp_fu_128_ce;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    sc_signal< sc_lv<64> > grp_fu_128_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_3F;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_M_AXIS_TDATA();
    void thread_M_AXIS_TDATA_blk_n();
    void thread_M_AXIS_TLAST();
    void thread_M_AXIS_TVALID();
    void thread_M_AXIS_V_data_1_ack_in();
    void thread_M_AXIS_V_data_1_ack_out();
    void thread_M_AXIS_V_data_1_data_out();
    void thread_M_AXIS_V_data_1_load_A();
    void thread_M_AXIS_V_data_1_load_B();
    void thread_M_AXIS_V_data_1_sel();
    void thread_M_AXIS_V_data_1_state_cmp_full();
    void thread_M_AXIS_V_data_1_vld_in();
    void thread_M_AXIS_V_data_1_vld_out();
    void thread_M_AXIS_V_last_1_ack_in();
    void thread_M_AXIS_V_last_1_ack_out();
    void thread_M_AXIS_V_last_1_data_out();
    void thread_M_AXIS_V_last_1_load_A();
    void thread_M_AXIS_V_last_1_load_B();
    void thread_M_AXIS_V_last_1_sel();
    void thread_M_AXIS_V_last_1_state_cmp_full();
    void thread_M_AXIS_V_last_1_vld_in();
    void thread_M_AXIS_V_last_1_vld_out();
    void thread_S_AXIS_TDATA_blk_n();
    void thread_S_AXIS_TREADY();
    void thread_S_AXIS_V_data_0_ack_in();
    void thread_S_AXIS_V_data_0_ack_out();
    void thread_S_AXIS_V_data_0_data_out();
    void thread_S_AXIS_V_data_0_load_A();
    void thread_S_AXIS_V_data_0_load_B();
    void thread_S_AXIS_V_data_0_sel();
    void thread_S_AXIS_V_data_0_state_cmp_full();
    void thread_S_AXIS_V_data_0_vld_in();
    void thread_S_AXIS_V_data_0_vld_out();
    void thread_S_AXIS_V_last_0_ack_out();
    void thread_S_AXIS_V_last_0_vld_in();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_rst_n_inv();
    void thread_exitcond3_fu_108_p2();
    void thread_exitcond_fu_134_p2();
    void thread_grp_fu_128_ce();
    void thread_grp_fu_128_p0();
    void thread_grp_fu_128_p00();
    void thread_i_2_fu_114_p2();
    void thread_i_3_fu_140_p2();
    void thread_tmp_1_fu_162_p1();
    void thread_tmp_5_fu_146_p2();
    void thread_tmp_fu_152_p4();
    void thread_tmp_last_fu_175_p2();
    void thread_write_output_data_fu_166_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
